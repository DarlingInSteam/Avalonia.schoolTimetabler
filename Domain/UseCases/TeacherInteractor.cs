using Domain.Entities;using Domain.Repositories;namespace Domain.UseCases;public class TeacherInteractor{    private readonly ITeachersRepository<Teacher> _teachersRepository;    public TeacherInteractor(ITeachersRepository<Teacher> teachersRepository)    {        _teachersRepository = teachersRepository;    }    public void DeleteTeacher(Teacher delTeacher)    {        _teachersRepository.Delete(delTeacher);    }    public void AddTeacher(Teacher newTeacher)    {        _teachersRepository.Add(newTeacher);    }    public List<Teacher> GetTeachers()    {        var t = _teachersRepository.Read();        return t;    }    public void DeleteDiscipline(int index)    {        _teachersRepository.DelDiscipline(index);    }    public List<string> GetTeacherDisciplines(int index)    {        var t = _teachersRepository.GetTeacherDiscipline(index);        return t;    }    public void AddDiscipline(List<string> str, int index)    {        _teachersRepository.AddDiscipline(str, index);    }}