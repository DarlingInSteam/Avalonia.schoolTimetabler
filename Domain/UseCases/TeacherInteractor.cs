using Domain.Entities;using Domain.Repositories;namespace Domain.UseCases;public class TeacherInteractor{    private readonly ITeachersRepository<Teacher> _teachersRepository;    public TeacherInteractor(ITeachersRepository<Teacher> teachersRepository)    {        _teachersRepository = teachersRepository;    }    public void DeleteTeacher(Teacher delTeacher)    {        _teachersRepository.Delete(delTeacher);    }    public void AddTeacher(string teacherName)    {        int counterEqualTeachers = 0;        foreach (var Teacher in _teachersRepository.Read().ToArray())        {            var name = Teacher.TeacherFullName;            int start = 0;            int finish = 0;            for (int i = 0; i < name.Length; i++)            {                if (name[i] == '(') start = i;                if (name[i] == ')') finish = i;            }            if (finish != 0)            {                name = name.Remove(start, finish);            }                        if (name  == teacherName)            {                counterEqualTeachers += 1;            }        }        if (counterEqualTeachers != 0)        {            teacherName = teacherName + '(' + counterEqualTeachers.ToString() + ')';        }                if (string.IsNullOrWhiteSpace(teacherName))        {            var message = MessageBox.Avalonia.MessageBoxManager                .GetMessageBoxStandardWindow("Неправильные данные",                    "Вы не заполинили поле: ФИО учителя").Show();        }        else        {            var newCabinet = new Teacher(teacherName);            _teachersRepository.Add(newCabinet);        }    }    public List<Teacher> GetTeachers()    {        var t = _teachersRepository.Read();        return t;    }    public void DeleteDiscipline(int indexTeacher, int indexDiscipline)    {        _teachersRepository.DelDiscipline(indexTeacher, indexDiscipline);    }    public List<string> GetTeacherDisciplines(int index)    {        var t = _teachersRepository.GetTeacherDiscipline(index);        return t;    }    public void AddDiscipline(List<string> str, int index)    {        var msg = new List<string>();                if (str.Count == 0)        {            var message = MessageBox.Avalonia.MessageBoxManager                .GetMessageBoxStandardWindow("Неправильные данные",                    "Вы не выбрали дисциплины для учителя").Show();        }        else if (str.Count != 0)        {            var t = _teachersRepository.GetTeacherDiscipline(index);            foreach (var strTeacher in t)            {                foreach (var strNew in str)                {                    if (strTeacher == strNew) msg.Add(strNew);                }            }            if (msg.Count != 0)            {                var message = MessageBox.Avalonia.MessageBoxManager                    .GetMessageBoxStandardWindow("Неправильные данные",                        "Данные дисциплины уже присутствуют у учителя:\n" + string.Join(", ", msg)).Show();            }            else            {                _teachersRepository.AddDiscipline(str, index);                var message = MessageBox.Avalonia.MessageBoxManager                    .GetMessageBoxStandardWindow("Оповещение",                        "Дисциплины успешно добавлены преподавателю.");                message.Show();            }        }    }}