using Domain.Entities;using Domain.Repositories;namespace Domain.UseCases;public class TimetableInteractor{    private readonly ITimetablesRepository<Timetable> _timetablesRepository;    public TimetableInteractor(ITimetablesRepository<Timetable> timetablesRepository)    {        _timetablesRepository = timetablesRepository;    }    public void AddTimetable(Timetable newTimetable)    {        _timetablesRepository.Add(newTimetable);    }    public void DeleteTimetable(Timetable delTimetable)    {        _timetablesRepository.Delete(delTimetable);    }    public List<Timetable> GetTimetable()    {        var t = _timetablesRepository.Read();        return t;    }    public List<string> GetDisciplines(string day, string classNumber)    {        var t = _timetablesRepository.GetDisciplines(day, classNumber);        return t;    }        public List<string> GetTeachers(string day, string classNumber)    {        var t = _timetablesRepository.GetTeacher(day, classNumber);        return t;    }        public List<string> GetCabinets(string day, string classNumber)    {        var t = _timetablesRepository.GetCabinet(day, classNumber);        return t;    }        public List<string> GetClasses(string day, string classNumber)    {        var t = _timetablesRepository.GetClass(day, classNumber);        return t;    }}