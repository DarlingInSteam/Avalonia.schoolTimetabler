using System;using System.Reactive;using System.Windows.Input;using Avalonia.Controls;using Avalonia.Input;using ReactiveUI;namespace Avalonia.schoolTimetabler.ViewModels{    public class MainWindowViewModel : ViewModelBase, IScreen    {        public string CreateSchoolProfileString => "Создать профиль школы";        public string SaveSchoolProfileString => "Сохранить профиль школы";        public string LoadSavedSchoolProfileString => "Загрузить профиль школоы";        public string DeleteSchoolProfileString => "Удалить профиль школы";        public string ViewTimetableString => "Посмотреть расписание";        public string CreateTimetableString => "Создать расписание автоматически";        public string DeleteTimetableString => "Удалить расписание";        public string SchoolInformationString => "Информация о школе";        public string HelpString => "Помощь";        public string HeaderAString => "Файл";        public string HeaderBString => "Расписание";        public string GreetingOneString => "Вас приветствует приложение: Школьное расписание.";        public string GreetingTwoString => "Для продолжения работы, пожалуйста, ознакомьтесь с разделом 'Помощь'.";        public string GreetingThreeString =>            "Если уже ознакомлены, то можете создать профиль школы или загрузить имеющийся в разделе 'Файл'.";                private bool _isVisibleGreeting = true;        public RoutingState Router { get; } = new RoutingState();        public ReactiveCommand<Unit, IRoutableViewModel> GoNext { get; }        public ReactiveCommand<Unit, Unit> GoBack => Router.NavigateBack;                public bool IsVisibleGreeting         {             set => this.RaiseAndSetIfChanged(ref _isVisibleGreeting, value);             get => _isVisibleGreeting;         }        public void IsVisibleChange()        {            IsVisibleGreeting = false;        }                public MainWindowViewModel()        {            GoNext = ReactiveCommand.CreateFromObservable(                () => Router.Navigate.Execute(new CreateSchoolProfileViewModel(this))            );        }    }}