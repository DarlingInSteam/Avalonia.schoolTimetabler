using System.Reactive.Linq;using System.Reactive.Subjects;using Domain.Entities;using Domain.Repositories;namespace Data.Repositories;public class SchoolRepository: ISchoolInfoRepository<SchoolInfo>{    protected IObservable<SchoolInfo> Info;    private readonly BehaviorSubject<SchoolInfo> _info;        private static SchoolRepository? _globalRepositoryInstance;    protected SchoolRepository()    {        _info = new BehaviorSubject<SchoolInfo>(new SchoolInfo("Не задано", "Не задано", "Не задано", "Не задано"));        Info = _info.AsObservable();    }        public static SchoolRepository GetInstance()    {        return _globalRepositoryInstance ??= new SchoolRepository();    }    public void Delete()    {        _info.Value.SchoolNumber = "";        _info.Value.CountClasses = "";        _info.Value.CountTeachers = "";        _info.Value.FullNameDirector = "";        Info = _info;    }    public void Add(SchoolInfo newSchoolInfo)    {        _info.Value.SchoolNumber = newSchoolInfo.SchoolNumber;        _info.Value.CountClasses = newSchoolInfo.CountClasses;        _info.Value.CountTeachers = newSchoolInfo.CountTeachers;        _info.Value.FullNameDirector = newSchoolInfo.FullNameDirector;        Info = _info;    }    public SchoolInfo Read()    {        var information = new SchoolInfo(_info.Value.SchoolNumber, _info.Value.FullNameDirector,            _info.Value.CountClasses, _info.Value.CountTeachers);        return information;    }}