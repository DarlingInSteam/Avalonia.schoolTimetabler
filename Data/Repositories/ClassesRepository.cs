using System.Reactive.Linq;using System.Reactive.Subjects;using Data.Repositories;using Domain.Entities;using Domain.Repositories;namespace Data.Repository;public class ClassesRepository : IClassesRepository<Class>{    protected IObservable<IEnumerable<Class>> Classes;    private readonly BehaviorSubject<List<Class>> _classes;        private static ClassesRepository? _globalRepositoryInstance;    protected ClassesRepository()    {        _classes = new BehaviorSubject<List<Class>>(new List<Class>());        Classes = _classes.AsObservable();    }        public static ClassesRepository GetInstance()    {        return _globalRepositoryInstance ??= new ClassesRepository();    }    public void Delete(Class delClass)    {        _classes.Value.Remove(delClass);        Classes = _classes;    }    public void Add(Class newClass)    {        _classes.Value.Add(newClass);        Classes = _classes;    }    public List<Class> Read()    {        var classes = new List<Class>(_classes.Value);        return classes;    }}