using System.Reactive.Linq;using System.Reactive.Subjects;using Data.Repositories;using Domain.Entities;using Domain.Repositories;namespace Data.Repository;public class ClassesRepository : SerializationRepository<Class>, IClassesRepository<Class>{    protected IObservable<IEnumerable<Class>> Classes;    private readonly BehaviorSubject<List<Class>> _classes;        private static ClassesRepository? _globalRepositoryInstance;    protected ClassesRepository(string path) : base(path)    {        _classes = new BehaviorSubject<List<Class>>(new List<Class>());        Classes = _classes.AsObservable();        path = "/home/darling/RiderProjects/Avalonia.schoolTimetabler/Data/DataSets/Classes.json";    }        public static ClassesRepository GetInstance()    {        return _globalRepositoryInstance ??= new ClassesRepository("/home/darling/RiderProjects/Avalonia.schoolTimetabler/Data/DataSets/Classes.json");    }    public void Delete(Class delClass)    {        Remove(delClass);    }    public void Add(Class newClass)    {        Append(newClass);        return;    }    public List<Class> Read()    {        return DeserializationJson();    }    public override bool CompareEntities(Class entity1, Class entity2)    {        return entity1.Number == entity2.Number && entity1.Symbol == entity2.Symbol;    }}