using System.Reactive.Linq;using System.Reactive.Subjects;using Domain.Entities;using Domain.Repositories;namespace Data.Repositories;public class DisciplineRepository : SerializationRepository<Discipline>, IDisciplinesRepository<Discipline>{    protected IObservable<IEnumerable<Discipline>> Disciplines { get; set; }    private BehaviorSubject<List<Discipline>> _disciplines { get; }        private static DisciplineRepository? _globalRepositoryInstance;    protected DisciplineRepository(string path) : base(path)    {        _disciplines = new BehaviorSubject<List<Discipline>>(new List<Discipline>());        Disciplines = _disciplines.AsObservable();        path = "/home/darling/RiderProjects/Avalonia.schoolTimetabler/Data/DataSets/Disciplines.json";    }        public static DisciplineRepository GetInstance()    {        return _globalRepositoryInstance ??= new DisciplineRepository("/home/darling/RiderProjects/Avalonia.schoolTimetabler/Data/DataSets/Disciplines.json");    }    public void Delete(Discipline delDiscipline)    {        Remove(delDiscipline);    }    public void Add(Discipline newDiscipline)    {        Append(newDiscipline);    }    public List<Discipline> Read()    {        return DeserializationJson();    }    public override bool CompareEntities(Discipline entity1, Discipline entity2)    {        return entity1.DisciplineName.Equals(entity2.DisciplineName);    }}