using System.Reactive.Linq;using System.Reactive.Subjects;using Domain.Entities;using Domain.Repositories;namespace Data.Repositories;public class UserRepository : IUserRepository<User>{    protected IObservable<User> UserInfo;    private readonly BehaviorSubject<User> _userInfo;        private static UserRepository? _globalRepositoryInstance;    protected UserRepository()    {        _userInfo = new BehaviorSubject<User>(new User("Не задано", "Не задано"));        UserInfo = _userInfo.AsObservable();    }        public static UserRepository GetInstance()    {        return _globalRepositoryInstance ??= new UserRepository();    }    public void Delete()    {        _userInfo.Value.Post = "Не задано";        _userInfo.Value.FullName = "Не задано";    }    public void Add(User newEntity)    {        _userInfo.Value.Post = newEntity.Post;        _userInfo.Value.FullName = newEntity.FullName;    }    public User Read()    {        var user = new User(_userInfo.Value.FullName, _userInfo.Value.Post);        return user;    }}