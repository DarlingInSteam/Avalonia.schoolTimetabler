using System.Collections.ObjectModel;using System.Reactive;using Data.FakeDataBase;using Data.Models;using ReactiveUI;namespace SchoolTimetabler.ViewModels;public class TeacherEditingMenuViewModel : ViewModelBase, IRoutableViewModel, IScreen{    private bool _isEnabledContinue = false;    public ObservableCollection<Data.Models.SchoolTeachers> Teachers { get; }    public ReactiveCommand<Unit, Unit> AddNewTeacher { get; }    private FDataBaseTeachers _storage;    public TeacherEditingMenuViewModel(CreateSchoolProfileViewModel createSchoolProfileViewModel, FDataBaseTeachers storage)    {        _storage = storage;        Teachers = new ObservableCollection<Data.Models.SchoolTeachers>(_storage.SchoolTeachers);        AddNewTeacher = ReactiveCommand.Create(() =>        {            var schoolTeacher = new Data.Models.SchoolTeachers("Новое ФИО учителя");            _storage.AddTeacher(schoolTeacher);            Teachers.Add(schoolTeacher);        });    }    public bool IsEnabledContinue    {         set => this.RaiseAndSetIfChanged(ref _isEnabledContinue, value);         get => _isEnabledContinue;     }        public string? UrlPathSegment { get; }    public IScreen HostScreen { get; }    public RoutingState Router { get; }}