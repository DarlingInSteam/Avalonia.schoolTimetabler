using System;using System.Collections.Generic;using System.Collections.ObjectModel;using System.Reactive;using Data.Repositories;using Domain.Entities;using Domain.UseCases;using ReactiveUI;using ReactiveUI.Fody.Helpers;namespace SchoolTimetabler.ViewModels;public class CabinetEditingMenuViewModel : ViewModelBase, IRoutableViewModel, IScreen{    [Reactive] public int DataGridSelectedIndex { get; set; }    [Reactive] public string CabinetNumber { get; set; }    public CabinetEditingMenuViewModel()    {        var cabinetInteractor = new CabinetInteractor(CabinetsRepository.GetInstance());        Cabinets = new ObservableCollection<Cabinet>(cabinetInteractor.GetCabinets());        AddNewCabinet = ReactiveCommand.Create(() =>        {            cabinetInteractor.AddCabinet(CabinetNumber);            Cabinets.Clear();            foreach (var t in cabinetInteractor.GetCabinets())            {                Cabinets.Add(t);            }        });        DeleteCabinet = ReactiveCommand.Create(() =>        {            cabinetInteractor.DelCabinet(Cabinets[DataGridSelectedIndex]);            Cabinets.Remove(Cabinets[DataGridSelectedIndex]);        });    }    public ObservableCollection<Cabinet> Cabinets { get; set; }    public ReactiveCommand<Unit, Unit> AddNewCabinet { get; }    public ReactiveCommand<Unit, Unit> DeleteCabinet { get; }    public string? UrlPathSegment { get; }    public IScreen HostScreen { get; }    public RoutingState Router { get; }}