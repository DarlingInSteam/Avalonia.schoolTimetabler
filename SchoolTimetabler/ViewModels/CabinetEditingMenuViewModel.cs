using System.Collections.Generic;using System.Collections.ObjectModel;using System.Reactive;using Data.FakeDataBase;using Data.Models;using Data.Repositories;using Domain.Entities;using Domain.UseCases;using ReactiveUI;namespace SchoolTimetabler.ViewModels;public class CabinetEditingMenuViewModel : ViewModelBase, IRoutableViewModel, IScreen{    private int _dataGridSelectedIndex;    private readonly CabinetInteractor _cabinetInteractor;    public CabinetEditingMenuViewModel()    {        _cabinetInteractor = new CabinetInteractor(CabinetsRepository.GetInstance());        Cabinets = new ObservableCollection<Cabinet>(_cabinetInteractor.GetCabinets());        AddNewCabinet = ReactiveCommand.Create(() =>        {            var schoolCabinet = new Cabinet("Новый кабинет");            _cabinetInteractor.AddCabinet(schoolCabinet);            Cabinets.Add(schoolCabinet);        });        DeleteCabinet = ReactiveCommand.Create(() =>        {            _cabinetInteractor.DelCabinet(Cabinets[_dataGridSelectedIndex]);            Cabinets.Remove(Cabinets[_dataGridSelectedIndex]);        });    }    public ObservableCollection<Cabinet> Cabinets { get; set; }    public ReactiveCommand<Unit, Unit> AddNewCabinet { get; }    public ReactiveCommand<Unit, Unit> DeleteCabinet { get; }    public int DataGridSelectedIndex    {        set => this.RaiseAndSetIfChanged(ref _dataGridSelectedIndex, value);        get => _dataGridSelectedIndex;    }    public string? UrlPathSegment { get; }    public IScreen HostScreen { get; }    public RoutingState Router { get; }}