using System.Collections.ObjectModel;using Data.FakeDataBase;using ReactiveUI;namespace SchoolTimetabler.ViewModels;public class SchoolInfoViewModel : ViewModelBase, IRoutableViewModel, IScreen{    private string? _schoolNumber;    private string? _fullNameDirector;    private string? _countClasses;    private string? _countTeacher;    private int _selectedIndexComboBox;    private bool _isVisiBleClsses = false;    private bool _isVisiBleDiscipline = false;    private bool _isVisiBleTeachers = false;    private FakeDataBaseSchoolInfo _storage;    private FDataBaseClasses _storageClasses;    private FDataBaseDisciplines _storageDisciplines;        public ObservableCollection<Data.Models.SchoolClass> Classes { get; }    public ObservableCollection<Data.Models.SchoolDiscipline> Disciplines { get; }    public ObservableCollection<Data.Models.SchoolTeachers> Teachers { get; }    public SchoolInfoViewModel(MainWindowViewModel mainWindowViewModel,         FakeDataBaseSchoolInfo storage, FDataBaseClasses storageClasses, FDataBaseDisciplines storageDisciplines)    {        _storage = storage;        _storageClasses = storageClasses;        _storageDisciplines = storageDisciplines;                Classes = new ObservableCollection<Data.Models.SchoolClass>(_storageClasses.SchoolClasses);        Disciplines = new ObservableCollection<Data.Models.SchoolDiscipline>(_storageDisciplines.SchoolDisciplines);                _schoolNumber = _storage.SchoolInfo.SchoolNumber;        _fullNameDirector = _storage.SchoolInfo.FullNameDirector;        _countClasses = _storage.SchoolInfo.CountClasses;        _countTeacher = _storage.SchoolInfo.CountTeachers;    }    public void OutputClasses()    {        IsVisibleDiscipline = false;        IsVisibleClasses = true;    }    public void OutputDisciplines()     {        IsVisibleClasses = false;        IsVisibleDiscipline = true;    }        public bool IsVisibleClasses    {         set => this.RaiseAndSetIfChanged(ref _isVisiBleClsses, value);         get => _isVisiBleClsses;     }    public bool IsVisibleDiscipline    {         set => this.RaiseAndSetIfChanged(ref _isVisiBleDiscipline, value);         get => _isVisiBleDiscipline;     }        public bool IsVisibleTeachers    {         set => this.RaiseAndSetIfChanged(ref _isVisiBleTeachers, value);         get => _isVisiBleTeachers;     }        public int SelectedIndexComboBox    {        get => _selectedIndexComboBox;        set => this.RaiseAndSetIfChanged(ref _selectedIndexComboBox, value);    }        public string? SchoolNumber    {        get => _schoolNumber;        set => this.RaiseAndSetIfChanged(ref _schoolNumber, value);    }        public string? FullNameDirector    {        get => _fullNameDirector;        set => this.RaiseAndSetIfChanged(ref _fullNameDirector, value);    }        public string? CountClasses    {        get => _countClasses;        set => this.RaiseAndSetIfChanged(ref _countClasses, value);    }        public string? CountTeacher    {        get => _countTeacher;        set => this.RaiseAndSetIfChanged(ref _countTeacher, value);    }        public string? UrlPathSegment { get; }    public IScreen HostScreen { get; }    public RoutingState Router { get; }}